@page "/awards"
@page "/awards/{typeShow}"

@inject HttpClient Http

@if (typeShow == "govahi")
{
    <h3 class="center">گواهینامه ها</h3>
}
else
{
    <h3 class="center">جوایز، تقدیرنامه ها</h3>
}

<div class="row">
    @if (AwardsArr == null)
    {
        <div style="display: block; margin-left: auto; margin-right: auto;margin-top:100px;">
            <img src="images/wait.gif" alt="در حال بارگیزی..." />
            <p>در حال بارگیری...</p>
        </div>
    }
    else
    {
        @foreach (AwardModel award in AwardsArr)
        {
            <div class="col-md-4">
            <div class="thumbnail">
                    <a href="@string.Format("/images/{0}", award.img)" target="_blank">
                    <img src="@string.Format("/images/{0}", award.img)" alt="@award.title" class="scaled" style="width:100%">
                    <div class="caption">
                        <p class="text-center">@award.title</p>
                        @* <p>@award.desc</p> *@
                    </div>
                    </a>
                </div>
            </div>
        }
    }
</div>

@code {
    [Parameter]
    public string typeShow { get; set; }= "award";

    public AwardModel[] AwardsArr;


    protected override async Task  OnParametersSetAsync()
    {
        try {
            if (typeShow == "govahi")
            {
                AwardsArr = await Http.GetFromJsonAsync<AwardModel[]>("govahies.json");
            }
            else
            {
                AwardsArr = await Http.GetFromJsonAsync<AwardModel[]>("awards.json");
            }
        }
        catch (Exception err) {
            AwardsArr = null;
            Console.WriteLine(err);
        }
        
    }

    public class AwardModel {
        public string title { get; set; }
        public string desc { get; set; }
        public string img { get; set; }
    }

}