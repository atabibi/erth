@page "/admin"

@inject HttpClient http
@inject NavigationManager navigationManager

<AuthorizeView>
    <Authorized>
        <h3 class="center">بخش مدیریت</h3>
        <div class="row">
            <div class="col-md">
                <button type="button" name="btnStudentRegisteredCDs" id="btnStudentRegisteredCDs" class="btn btn-primary btn-block" 
                @onclick="@(async () =>  await BtnsClicked(RegisteredCdType.StudentRegistered))">کدهای دانشجویی</button>
            </div>
            <div class="col-md">
                <button type="button" name="btnProRegisteredCDs" id="btnProRegisteredCDs" class="btn btn-success btn-block" 
                @onclick="@(async () => await BtnsClicked(RegisteredCdType.ProRegistered))">کدهای حرفه‌ای</button>
            </div>
            <div class="col-md">
                <button type="button"  class="btn btn-warning btn-block" 
                @onclick="@BtnGetNewLabelClicked">درخواست برچسب</button>
            </div>
            <div class="col-md">
                <button type="button"  class="btn btn-info btn-block" 
                @onclick="@BtnLabelsListClicked">برچسب‌های ثبت شده</button>
            </div>
            <div class="col-md">
                <button type="button"  class="btn btn-danger btn-block" 
                @onclick="@BtnAddNewUserClicked">کاربران</button>
            </div>
        </div>
        
        <div class="row">
            <strong>@strSelectedType</strong>

            @if (CdsData != null)
            {
                <TbList Items="CdsData" TItem="RegisterCdVMwithDate" FromIndex="indexFrom">
                    <Header>
                        <th>ردیف</th>
                        <th>برچسب سی‌دی</th>
                        <th>نام</th>
                        <th> 
                            <button class="btn btn-link" @onclick="@(async ()=> await BtnOrderRegisteredCds(OrderBy.United))">
                                <span class="@(OrderInverse ? "oi oi-sort-descending" : "oi oi-sort-ascending")"></span> استان
                            </button>
                        </th>
                        <th>شهر</th>
                        <th>شعبه</th>
                        <th>
                            <button class="btn btn-link" @onclick="@(async ()=> await BtnOrderRegisteredCds(OrderBy.Date))">
                                <span class="@(OrderInverse ? "oi oi-sort-descending" : "oi oi-sort-ascending")"></span> تاریخ
                            </button>
                        </th>     
                    </Header>
                    <Row Context="cd">
                        <td>@cd.CdLabel</td>
                        <td>@cd.FullName</td>
                        <td>@cd.United</td>
                        <td>@cd.City</td>
                        <td>@cd.Shobeh</td>
                        <td>@cd.DateRegistred</td>
                    </Row>
                </TbList>                
            }
            else
            {
                @if (isLoading)
                {
                    <div style="display: block; margin-left: auto; margin-right: auto;margin-top:100px;">
                        <img src="images/wait.gif" alt="در حال بارگیزی..." />
                        <p>در حال بارگیری...</p>
                    </div>
                }
            
            }
            
        </div>

        @if (CdsData != null)
        {
            <RecordNavigation OnNavigate="@OnNavigateRecords" FromIndex="@indexFrom" Count="@Count" AllRecordsCount="@AllRecordsCount"/>
        }
    </Authorized>
</AuthorizeView>


@code {
    private string strSelectedType="";
    private bool isLoading = false;
    public List<RegisterCdVMwithDate> CdsData {get;set;} = null;
    public OrderBy OderedBy {get;set;}
    public bool OrderInverse {get;set;} = false;
    public RegisteredCdType RegisteredCdType {get;set;}
    public int indexFrom { get; set; }
    public int Count { get; set; } = 10;
    public int AllRecordsCount { get; set; }
    async Task BtnsClicked(RegisteredCdType cdType)
    {        
        indexFrom = 0;
        RegisteredCdType = cdType;
        await GetRegisteredCds();
    }

    async Task BtnOrderRegisteredCds(OrderBy orderBy)
    {
        if ((int)OderedBy % 2 == (int)orderBy)
        {
            OrderInverse = !OrderInverse;
        }

        OderedBy = (OrderBy)(OrderInverse ? (int)orderBy+2 : (int)orderBy);

        await GetRegisteredCds();
    }
    async Task GetRegisteredCds()
    {
        try
        {
            
            isLoading = true;

            // اول تعداد کل رکوردها را بیاب
            var resultsCount = await http.GetFromJsonAsync<TbActionResult<int>>(
                                    $"api/RegisterCd/RegisteredCds?cdType={RegisteredCdType}&orderBy={OderedBy}&from={0}&count={-1}&onlyCount=true"
                                    );

            AllRecordsCount = resultsCount.Object;
            strSelectedType = resultsCount.Desc;

            
            var results = await http.GetFromJsonAsync<TbActionResult<List<RegisterCdVMwithDate>>>(
                                    $"api/RegisterCd/RegisteredCds?cdType={RegisteredCdType}&orderBy={OderedBy}&from={indexFrom}&count={Count}"
                                    );
            
            if (results.Success)
            {
                CdsData = results.Object;
            }
            isLoading = false;
                
        }
        catch (System.Exception err)
        {
            if (err.ToString().Contains("Unauthorized"))
            {
                navigationManager.NavigateTo("login");
            }
        }
    }

   
    async Task OnNavigateRecords(RecordNavigationEventArgs recordNavigation)
    {
        indexFrom = recordNavigation.FromIndex;
        Count = recordNavigation.Count;
        AllRecordsCount = recordNavigation.AllRecordsCount;

        await GetRegisteredCds();
    }

    // New Label
    void BtnGetNewLabelClicked()
    {        
        navigationManager.NavigateTo($"/newcdlabel");
    }

    // لیست برچسب‌هایی که قبلا اختصاص یافته است
    void BtnLabelsListClicked()
    {
        navigationManager.NavigateTo("/usedcdlbels");
    }

    // ایجاد کاربر جدید
    void BtnAddNewUserClicked()
    {
        navigationManager.NavigateTo("/manageusers");
    }
}