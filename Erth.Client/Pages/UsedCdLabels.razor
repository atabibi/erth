@page "/usedcdlbels"
@inject HttpClient http
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<AuthorizeView Roles="admin">
    <Authorized>
        <h3 class="center">
            <a href="/admin"> <span class="oi oi-arrow-circle-right"></span> </a>
            لیست برچسب‌هایی که تاکنون به مشتریان اختصاص یافته است
        </h3>
        <div class="row">            
            <button @onclick="@(async () => await BtnProClicked())" class="btn btn-primary mb-2 ml-2">نسخه‌ی حرفه‌ای</button>
            <button @onclick="@(async () => await BtnStudentClicked())" class="btn btn-success mb-2 ml-2">نسخه‌ی دانشجویی</button>         
        </div>       
        
        <p>
            @($"تعداد: {allRecordsCount}")
        </p>

        @if(DedicatedLabls != null)
        {
            <TbList Items="DedicatedLabls" TItem="DedicatedLablsVM" FromIndex="@fromIndex">
                <Header>
                    <th>ردیف</th>
                    <th>برچسب</th>
                    <th>نام</th>
                    <th>استان</th>
                    <th>تعداد ثبت</th>
                </Header>
                <Row Context="lbl">
                    <td>@lbl.Label</td>
                    <td>@lbl.FullName</td>
                    <td>@lbl.United</td>
                    <td>@lbl.RegisteredCount</td>
                </Row>
            </TbList>
            
            <RecordNavigation OnNavigate="@OnNavigateRecords" FromIndex="@fromIndex" Count="@count" AllRecordsCount="@allRecordsCount"/>
        }
        else
        {
            @if (isLoading)
            {
                <ShowLoading/>
            }
        }
    </Authorized>
</AuthorizeView>

@code 
{
    bool isLoading = false;
    private CdTypeErth typeErth = CdTypeErth.Pro;
    private int allRecordsCount;
    private int fromIndex=0;
    private int count=10;
    private List<DedicatedLablsVM> DedicatedLabls = null;

    async Task GetDedicatedLabels()
    {
        try
        {
                    //ابتدا تعداد رکوردها را بیاب
            var resultsCount = await http.GetFromJsonAsync<TbActionResult<int>>(
                                    $"api/RegisterCd/GetDedicatedLabels?cdTypeErth={typeErth}&from={0}&count={-1}&countOnly=true"
                                    );

            allRecordsCount = resultsCount.Object;

            // حالا خود داده ها
            var result = await http.GetFromJsonAsync<TbActionResult<List<DedicatedLablsVM>>>(
                                    $"api/RegisterCd/GetDedicatedLabels?cdTypeErth={typeErth}&from={fromIndex}&count={count}&countOnly=false"
                                    );

            if (result.Success)
            {
                DedicatedLabls = result.Object;
            }

            isLoading = false;
        }
        catch (System.Exception err)
        {
            if (err.ToString().Contains("Unauthorized"))
            {
                navigationManager.NavigateTo("login");
            }
        }

    }

    async Task OnNavigateRecords(RecordNavigationEventArgs recordNavigation)
    {
        fromIndex = recordNavigation.FromIndex;
        count = recordNavigation.Count;
        allRecordsCount = recordNavigation.AllRecordsCount;

        await GetDedicatedLabels();
    }
    async Task BtnStudentClicked()
    {
        typeErth = CdTypeErth.Student;
        await GetDedicatedLabels();
    }

    async Task BtnProClicked()
    {
        typeErth = CdTypeErth.Pro;
        await GetDedicatedLabels();
    }

}